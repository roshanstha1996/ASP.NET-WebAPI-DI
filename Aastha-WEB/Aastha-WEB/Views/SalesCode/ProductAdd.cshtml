@model Aastha_WEB.ViewModel.SalesCodeViewModel

@{
    ViewBag.Title = "ProductAdd";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Add Product to Proceed to Billing</h3>

<p>
    @*@Html.ActionLink("Create New", "Create")*@
</p>
<div class="form-horizontal">
    @*<h4>Enter Product Details to Proceed</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group" hidden>
        @Html.LabelFor(model => model.salesCodeModel.SalesCodeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" id="SalesCodeId" value="@Html.Raw(Model.salesCodeModel.SalesCodeId)" name="SalesCodeId" />
            @*@Html.EditorFor(model => model.salesCodeModel.SalesCodeId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.salesCodeModel.SalesCodeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.salesCodeModel.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.salesCodeModel.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.salesCodeModel.CustomerName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.salesCodeModel.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.salesCodeModel.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.salesCodeModel.ContactNumber, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<br>
<table id="salestable" class="table">
    <tr>
        <th hidden>
            @Html.DisplayNameFor(model => model.productModels[0].ProductId)
        </th>
        <th hidden>
            @Html.DisplayNameFor(model => model.productModels[0].CategoryId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.productModels[0].ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.productModels[0].Rate)
        </th>
        <th hidden>
            @Html.DisplayNameFor(model => model.productModels[0].QuantityInStock)
        </th>
        <th hidden>
            @Html.DisplayNameFor(model => model.productModels[0].ThresholdValue)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.productModels[0].MfgDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.productModels[0].ExpDate)
        </th>
        <th hidden>
            @Html.DisplayNameFor(model => model.productModels[0].Remarks)
        </th>
    </tr>

    @foreach (var item in Model.productModels)
    {
        <tr id="@item.ProductId">
            <td hidden  class="row-data">
                @Html.DisplayFor(model => item.ProductId)
            </td>
            <td hidden class="row-data">
                @Html.DisplayFor(model => item.CategoryId)
            </td>
            <td class="row-data">
                @Html.DisplayFor(model => item.ProductName)
            </td>
            <td class="row-data">
                @Html.DisplayFor(model => item.Rate)
            </td>
            <td hidden class="row-data">
                @Html.DisplayFor(model => item.QuantityInStock)
            </td>
            <td class="row-data" hidden>
                @Html.DisplayFor(model => item.ThresholdValue)
            </td>
            <td class="row-data">
                @Html.DisplayFor(model => item.MfgDate)
            </td>
            <td class="row-data">
                @Html.DisplayFor(model => item.ExpDate)
            </td>
            <td class="row-data" hidden>
                @Html.DisplayFor(model => item.Remarks)
            </td>
            <td>
                @*<input type="button" value="submit" onclick="show()" />*@
                <a href="@Url.Action("Index", "Sales", new {salescodeid = Model.salesCodeModel.SalesCodeId, productid = item.ProductId}, null)">Add Product</a>
            
                    @*@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })*@
            </td>
        </tr>

    }

</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var salesCodeId = $('#SalesCodeId').val();
        var productId = 0;
        function show() {
            var rowId = event.target.parentNode.parentNode.id;
            //this gives id of tr whose button was clicked
            var data = document.getElementById(rowId).querySelectorAll(".row-data");
            /*returns array of all elements with "row-data" class within the row with given id*/

            productId = data[0].innerHTML;
            //var age = data[1].innerHTML;

            alert("ProductId: " + productId + "\nAge: " + age);
        }


    </script>
}

